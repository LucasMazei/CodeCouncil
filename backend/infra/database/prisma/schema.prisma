// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          String        @id @default(uuid())
    email       String        @unique
    name        String
    password    String
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    Repository  Repository[]
    Commit      Commit[]
    PullRequest PullRequest[]
}

model Repository {
    id          Int           @id @default(autoincrement())
    name        String
    description String?
    isPrivate   Boolean
    url         String
    ownerId     String
    owner       User          @relation(fields: [ownerId], references: [id])
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    Commit      Commit[]
    PullRequest PullRequest[]
}

model Commit {
    id           Int        @id @default(autoincrement())
    message      String
    repositoryId Int
    repository   Repository @relation(fields: [repositoryId], references: [id])
    createdAt    DateTime   @default(now())
    authorId     String
    author       User       @relation(fields: [authorId], references: [id])
    commitHash   String
}

model PullRequest {
    id           Int        @id @default(autoincrement())
    title        String
    description  String?
    repositoryId Int
    repository   Repository @relation(fields: [repositoryId], references: [id])
    authorId     String
    author       User       @relation(fields: [authorId], references: [id])
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt
    closedAt     DateTime?
}
